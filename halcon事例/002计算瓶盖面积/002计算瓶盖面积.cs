//
// File generated by HDevelop for HALCON/.NET (C#) Version 17.12
//
//  This file is intended to be used with the HDevelopTemplate or
//  HDevelopTemplateWPF projects located under %HALCONEXAMPLES%\c#

using System;
using HalconDotNet;

public partial class HDevelopExport
{
  public HTuple hv_ExpDefaultWinHandle;

  // Main procedure 
  private void action()
  {


    // Local iconic variables 

    HObject ho_Image, ho_GrayImage, ho_Region;
    HObject ho_ConnectedRegions, ho_SelectedRegions;

    // Local control variables 

    HTuple hv_Width = null, hv_Height = null, hv_Area = null;
    HTuple hv_Row = null, hv_Column = null;
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Image);
    HOperatorSet.GenEmptyObj(out ho_GrayImage);
    HOperatorSet.GenEmptyObj(out ho_Region);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
    //画轮廓的形式
    HOperatorSet.SetDraw(hv_ExpDefaultWinHandle, "margin");
    //读图
    ho_Image.Dispose();
    HOperatorSet.ReadImage(out ho_Image, "C:/Users/zhuwei/Documents/halcontest/02.jpg");
    //获取图片尺寸
    HOperatorSet.GetImageSize(ho_Image, out hv_Width, out hv_Height);
    //显示图片
    HOperatorSet.DispObj(ho_Image, hv_ExpDefaultWinHandle);
    //灰度化用于二值化
    ho_GrayImage.Dispose();
    HOperatorSet.Rgb1ToGray(ho_Image, out ho_GrayImage);
    //显示灰度图
    HOperatorSet.DispObj(ho_GrayImage, hv_ExpDefaultWinHandle);
    //二值化
    ho_Region.Dispose();
    HOperatorSet.Threshold(ho_GrayImage, out ho_Region, 112, 254);
    //二值化后的区域
    HOperatorSet.DispObj(ho_Region, hv_ExpDefaultWinHandle);
    //连通域分割
    ho_ConnectedRegions.Dispose();
    HOperatorSet.Connection(ho_Region, out ho_ConnectedRegions);
    HOperatorSet.DispObj(ho_ConnectedRegions, hv_ExpDefaultWinHandle);
    //特征划分（area和circularity）
    ho_SelectedRegions.Dispose();
    HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, (new HTuple("area")).TupleConcat(
        "circularity"), "and", (new HTuple(6224.35)).TupleConcat(0.7832), (new HTuple(100000)).TupleConcat(
        1));
    HOperatorSet.DispObj(ho_SelectedRegions, hv_ExpDefaultWinHandle);
    //计算盖子的面积，中间点像素
    HOperatorSet.AreaCenter(ho_SelectedRegions, out hv_Area, out hv_Row, out hv_Column);
    
    //显示
   // disp_message(hv_ExpDefaultWinHandle, hv_Area, "window", hv_Row, hv_Column, "black", 
  //      "true");


    ho_Image.Dispose();
    ho_GrayImage.Dispose();
    ho_Region.Dispose();
    ho_ConnectedRegions.Dispose();
    ho_SelectedRegions.Dispose();

  }

  public void InitHalcon()
  {
    // Default settings used in HDevelop 
    HOperatorSet.SetSystem("width", 512);
    HOperatorSet.SetSystem("height", 512);
  }

  public void RunHalcon(HTuple Window)
  {
    hv_ExpDefaultWinHandle = Window;
    action();
  }

}

